// Generated by view binder compiler. Do not edit!
package com.francisco.onepieceec03navarroinfante.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.francisco.onepieceec03navarroinfante.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddOnePieceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAddImg;

  @NonNull
  public final Button btnRegisterOnepiece;

  @NonNull
  public final TextInputLayout onepieceImg;

  @NonNull
  public final TextInputEditText textInputEditText;

  @NonNull
  public final TextInputLayout tilOnepEceTittle;

  @NonNull
  public final TextInputLayout tilOnepieceDescripcion;

  private ActivityAddOnePieceBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAddImg,
      @NonNull Button btnRegisterOnepiece, @NonNull TextInputLayout onepieceImg,
      @NonNull TextInputEditText textInputEditText, @NonNull TextInputLayout tilOnepEceTittle,
      @NonNull TextInputLayout tilOnepieceDescripcion) {
    this.rootView = rootView;
    this.btnAddImg = btnAddImg;
    this.btnRegisterOnepiece = btnRegisterOnepiece;
    this.onepieceImg = onepieceImg;
    this.textInputEditText = textInputEditText;
    this.tilOnepEceTittle = tilOnepEceTittle;
    this.tilOnepieceDescripcion = tilOnepieceDescripcion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddOnePieceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddOnePieceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_one_piece, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddOnePieceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_img;
      Button btnAddImg = ViewBindings.findChildViewById(rootView, id);
      if (btnAddImg == null) {
        break missingId;
      }

      id = R.id.btn_register_onepiece;
      Button btnRegisterOnepiece = ViewBindings.findChildViewById(rootView, id);
      if (btnRegisterOnepiece == null) {
        break missingId;
      }

      id = R.id.onepiece_Img;
      TextInputLayout onepieceImg = ViewBindings.findChildViewById(rootView, id);
      if (onepieceImg == null) {
        break missingId;
      }

      id = R.id.textInputEditText;
      TextInputEditText textInputEditText = ViewBindings.findChildViewById(rootView, id);
      if (textInputEditText == null) {
        break missingId;
      }

      id = R.id.til_onep√≠ece_tittle;
      TextInputLayout tilOnepEceTittle = ViewBindings.findChildViewById(rootView, id);
      if (tilOnepEceTittle == null) {
        break missingId;
      }

      id = R.id.til_onepiece_descripcion;
      TextInputLayout tilOnepieceDescripcion = ViewBindings.findChildViewById(rootView, id);
      if (tilOnepieceDescripcion == null) {
        break missingId;
      }

      return new ActivityAddOnePieceBinding((ConstraintLayout) rootView, btnAddImg,
          btnRegisterOnepiece, onepieceImg, textInputEditText, tilOnepEceTittle,
          tilOnepieceDescripcion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
